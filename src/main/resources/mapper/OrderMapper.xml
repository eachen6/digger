<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digger.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.digger.pojo.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gameid" jdbcType="INTEGER" property="gameid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="coverimg" jdbcType="VARCHAR" property="coverimg" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="paytime" jdbcType="TIMESTAMP" property="paytime" />
    <result column="issend" jdbcType="TINYINT" property="issend" />
    <result column="closetime" jdbcType="TIMESTAMP" property="closetime" />
    <result column="ordernum" jdbcType="BIGINT" property="ordernum" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gameid, userid, coverimg, price, createtime, updatetime, state, paytime, issend, 
    closetime, ordernum
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.digger.pojo.Order">
    insert into `order` (id, gameid, userid, 
      coverimg, price, createtime, 
      updatetime, state, paytime, 
      issend, closetime, ordernum
      )
    values (#{id,jdbcType=INTEGER}, #{gameid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{coverimg,jdbcType=VARCHAR}, #{price,jdbcType=FLOAT}, now(), now(), #{state,jdbcType=TINYINT}, 
      #{paytime,jdbcType=TIMESTAMP}, #{issend,jdbcType=TINYINT},
      #{closetime,jdbcType=TIMESTAMP}, #{ordernum,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.digger.pojo.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gameid != null">
        gameid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="coverimg != null">
        coverimg,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="paytime != null">
        paytime,
      </if>
      <if test="issend != null">
        issend,
      </if>
      <if test="closetime != null">
        closetime,
      </if>
      <if test="ordernum != null">
        ordernum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gameid != null">
        #{gameid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="coverimg != null">
        #{coverimg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="paytime != null">
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="issend != null">
        #{issend,jdbcType=TINYINT},
      </if>
      <if test="closetime != null">
        #{closetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordernum != null">
        #{ordernum,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.digger.pojo.Order">
    update order
    <set>
      <if test="gameid != null">
        gameid = #{gameid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="coverimg != null">
        coverimg = #{coverimg,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="paytime != null">
        paytime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="issend != null">
        issend = #{issend,jdbcType=TINYINT},
      </if>
      <if test="closetime != null">
        closetime = #{closetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordernum != null">
        ordernum = #{ordernum,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digger.pojo.Order">
    update order
    set gameid = #{gameid,jdbcType=INTEGER},
      userid = #{userid,jdbcType=INTEGER},
      coverimg = #{coverimg,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      paytime = #{paytime,jdbcType=TIMESTAMP},
      issend = #{issend,jdbcType=TINYINT},
      closetime = #{closetime,jdbcType=TIMESTAMP},
      ordernum = #{ordernum,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 新增方法：查看订单-->
  <select id="toGetOrder" parameterType="java.lang.Integer" resultType="com.digger.vo.OrderVO">
    select a.*,b.name
    from `order` as a,game as b
    where userid = #{userid} and a.gameid = b.id and deleted=0
    order by createtime desc 
  </select>
  
  <!-- 新增方法：检查用户是否购买过该游戏（不包括赠送别人的）--> 
  <select id="isBuy_Order" resultType="Integer">
      SELECT count(`order`.id) 
      from `order` left join send on `order`.ordernum = send.ordernum
      where ((gameid=#{gameid} and userid=#{userid}) OR (gameid=#{gameid} and targetid=#{userid} and issend = 1))
      and (state = 1 or state = 2 or state = 4 or state = 5) 
  </select>
  
  <select id="getOrderByOrdernum" resultType="com.digger.pojo.Order">
      select ordernum,userid,price,state
      from `order`
      where ordernum = #{ordernum}
  </select>

  <insert id="insertPayinfo" parameterType="com.digger.pojo.Order">
    insert into Payinfo (userid, ordernum, payplatform, platformnumber,updatetime, createtime)
    values (#{pay.userid},#{pay.ordernum},#{pay.payplatform},#{pay.platformnumber},now(), now())
  </insert>
  
  <!-- 新增方法：支付成功后更改订单状态--> 
  <update id="updateOrderStatus" >
      update `order` set state = #{paid},paytime=now() where ordernum=#{ordernum}
  </update>
  
  <!-- 新增方法：更改该游戏《等待交易》的订单的状态--> 
  <update id="updateOldOrderstatus" >
     update `order` set state = 5 
     where gameid in (select gameid from (select a.gameid from `order` as a where a.ordernum=#{ordernum}) as d) 
     and userid in (select userid from(select b.userid from `order` as b where b.ordernum=#{ordernum}) as e)
     and state = 0 and closetime>now()  
  </update>
  
  <!-- 新增方法：删除订单--> 
  <update id="deleteByid" >
      update `order` set deleted = 1 where id=#{id}
  </update>
  
  <!-- 新增方法：取消订单退款--> 
  <update id="cancelByid" >
      update `order` set state = 1 where id=#{id}
  </update>
  
   <!-- 新增方法：申请退款--> 
  <update id="applyRefundByid" >
      update `order` set state = 2 where id=#{id}
  </update>
</mapper>