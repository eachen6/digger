<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digger.dao.DiscountlistMapper">
  <resultMap id="BaseResultMap" type="com.digger.pojo.Discountlist">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gameid" jdbcType="INTEGER" property="gameid" />
    <result column="discount" jdbcType="REAL" property="discount" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gameid, discount, deadline, starttime, createtime, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from discountlist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from discountlist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.digger.pojo.Discountlist">
    insert into discountlist (id, gameid, discount, 
      deadline, starttime, createtime, 
      updatetime)
    values (#{id,jdbcType=INTEGER}, #{gameid,jdbcType=INTEGER}, #{discount,jdbcType=REAL}, 
      #{deadline,jdbcType=TIMESTAMP}, #{starttime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.digger.pojo.Discountlist">
    insert into discountlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gameid != null">
        gameid,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gameid != null">
        #{gameid,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=REAL},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.digger.pojo.Discountlist">
    update discountlist
    <set>
      <if test="gameid != null">
        gameid = #{gameid,jdbcType=INTEGER},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=REAL},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digger.pojo.Discountlist">
    update discountlist
    set gameid = #{gameid,jdbcType=INTEGER},
      discount = #{discount,jdbcType=REAL},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>