<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digger.dao.PayinfoMapper">
  <resultMap id="BaseResultMap" type="com.digger.pojo.Payinfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="ordernum" jdbcType="BIGINT" property="ordernum" />
    <result column="payplatform" jdbcType="TINYINT" property="payplatform" />
    <result column="platformnumber" jdbcType="VARCHAR" property="platformnumber" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, ordernum, payplatform, platformnumber, createtime, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from payinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.digger.pojo.Payinfo">
    insert into payinfo (id, userid, ordernum, 
      payplatform, platformnumber, createtime, 
      updatetime)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{ordernum,jdbcType=BIGINT}, 
      #{payplatform,jdbcType=TINYINT}, #{platformnumber,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.digger.pojo.Payinfo">
    insert into payinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="ordernum != null">
        ordernum,
      </if>
      <if test="payplatform != null">
        payplatform,
      </if>
      <if test="platformnumber != null">
        platformnumber,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordernum != null">
        #{ordernum,jdbcType=BIGINT},
      </if>
      <if test="payplatform != null">
        #{payplatform,jdbcType=TINYINT},
      </if>
      <if test="platformnumber != null">
        #{platformnumber,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.digger.pojo.Payinfo">
    update payinfo
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="ordernum != null">
        ordernum = #{ordernum,jdbcType=BIGINT},
      </if>
      <if test="payplatform != null">
        payplatform = #{payplatform,jdbcType=TINYINT},
      </if>
      <if test="platformnumber != null">
        platformnumber = #{platformnumber,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digger.pojo.Payinfo">
    update payinfo
    set userid = #{userid,jdbcType=INTEGER},
      ordernum = #{ordernum,jdbcType=BIGINT},
      payplatform = #{payplatform,jdbcType=TINYINT},
      platformnumber = #{platformnumber,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>