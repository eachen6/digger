<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digger.dao.AnnouncementMapper">
  <resultMap id="BaseResultMap" type="com.digger.pojo.Announcement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gameid" jdbcType="INTEGER" property="gameid" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.digger.pojo.AnnouncementWithBLOBs">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, gameid, imgurl, title, createtime, updatetime
  </sql>
  <sql id="Blob_Column_List">
    introduction, content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.digger.pojo.AnnouncementWithBLOBs">
    insert into announcement (id, gameid, imgurl, 
      title, createtime, updatetime, 
      introduction, content)
    values (#{id,jdbcType=INTEGER}, #{gameid,jdbcType=INTEGER}, #{imgurl,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, now(), now(), 
      #{introduction,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.digger.pojo.AnnouncementWithBLOBs">
    insert into announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gameid != null">
        gameid,
      </if>
      <if test="imgurl != null">
        imgurl,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gameid != null">
        #{gameid,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.digger.pojo.AnnouncementWithBLOBs">
    update announcement
    <set>
      <if test="gameid != null">
        gameid = #{gameid,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null">
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = now(),
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.digger.pojo.AnnouncementWithBLOBs">
    update announcement
    set
      imgurl = #{imgurl,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = now(),
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digger.pojo.Announcement">
    update announcement
    set gameid = #{gameid,jdbcType=INTEGER},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 新增方法：获取公告列表-->
  <select id="getAllAnnouncement"  resultType="com.digger.vo.AnnouncementVO">
    select a.id,a.title,a.content,a.createtime,b.name,a.updatetime
    from announcement as a,game as b
    where a.gameid = b.id
  </select>
  
  <!-- 新增方法：根據游戲id获取公告列表-->
  <select id="toGetAnnouncementByGameid" parameterType="java.lang.Integer" resultType="com.digger.pojo.Announcement">
    select 
    id,title,createtime
    from announcement where gameid = #{gameid}
  </select>
</mapper>